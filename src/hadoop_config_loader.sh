#!/usr/bin/env bash

function loadConfig() {
    if [[ "$2" != "NULL" ]]
        then
            printf "\t<property>\n\t\t<name>$1</name>\n\t\t<value>$2</value>\n\t</property>\n" >> "${HADOOP_CONF_DIR}/$3"
    fi
}

function loadConfigWithOption() {
    if [[ "$2" != "NULL" ]]
        then
            printf "\t<property>\n\t\t<name>$1</name>\n\t\t<value>$3</value>\n\t</property>\n" >> "${HADOOP_CONF_DIR}/$5"
    else
        printf "\t<property>\n\t\t<name>$1</name>\n\t\t<value>$4</value>\n\t</property>\n" >> "${HADOOP_CONF_DIR}/$5"
    fi
}

# ---------------------------- Load core-site.xml configs ----------------------
echo "<configuration>" > ${HADOOP_CONF_DIR}/core-site.xml
loadConfigWithOption "fs.defaultFS" ${FS_HOSTNAME} "${FS_DEFAULTFS_PREFIX}${FS_HOSTNAME}:${FS_DEFAULTFS_PORT}" "${FS_DEFAULTFS_PREFIX}${HOSTNAME}:${FS_DEFAULTFS_PORT}" "core-site.xml"
loadConfig "fs.trash.interval" ${FS_TRASH_INTERVAL} "core-site.xml"
loadConfig "fs.trash.checkpoint.interval" ${FS_TRASH_CHECKPOINT_INTERVAL} "core-site.xml"
loadConfig "io.file.buffer.size" ${IO_FILE_BUFFER_SIZE} "core-site.xml"
loadConfig "io.bytes.per.checksum" ${IO_BYTES_PER_CHECKSUM} "core-site.xml"
loadConfig "io.skip.checksum.errors" ${IO_SKIP_CHECKSUM_ERRORS} "core-site.xml"
loadConfig "io.map.index.skip" ${IO_MAP_INDEX_SKIP} "core-site.xml"
loadConfig "io.map.index.interval" ${IO_MAP_INDEX_INTERVAL} "core-site.xml"
loadConfig "hadoop.http.staticuser.user" ${HTTP_STATICUSER_USER} "core-site.xml"
loadConfig "hadoop.registry.rm.enabled" ${REGISTRY_RM_ENABLED} "core-site.xml"
loadConfig "hadoop.registry.zk.root" ${REGISTRY_ZK_ROOT} "core-site.xml"
loadConfig "hadoop.registry.zk.session.timeout.ms" ${REGISTRY_ZK_SESSION_TIMEOUT_MS} "core-site.xml"
loadConfig "hadoop.registry.zk.connection.timeout.ms" ${REGISTRY_ZK_CONNECTION_TIMEOUT_MS} "core-site.xml"
loadConfig "hadoop.registry.zk.retry.times" ${REGISTRY_ZK_RETRY_TIMES} "core-site.xml"
loadConfig "hadoop.registry.zk.retry.interval.ms" ${REGISTRY_ZK_RETRY_INTERVAL_MS} "core-site.xml"
loadConfig "hadoop.registry.zk.retry.ceiling.ms" ${REGISTRY_ZK_RETRY_CEILING_MS} "core-site.xml"
loadConfig "hadoop.registry.secure" ${REGISTRY_SECURE} "core-site.xml"
loadConfig "hadoop.registry.system.acls" ${REGISTRY_SYSTEM_ACLS} "core-site.xml"
loadConfig "hadoop.registry.zk.quorum" ${REGISTRY_ZK_QUORUM} "core-site.xml"
echo "</configuration>" >> ${HADOOP_CONF_DIR}/core-site.xml
# ------------------------------------------------------------------------------

# --------------------------- Load hdfs-site.xml configs -----------------------
echo "<configuration>" > ${HADOOP_CONF_DIR}/hdfs-site.xml
loadConfig "dfs.namenode.http-address" "${DFS_HTTP_IP}:${DFS_NAMENODE_HTTP_PORT}" "hdfs-site.xml"
loadConfig "dfs.namenode.heartbeat.recheck-interval" ${DFS_NAMENODE_HEARTBEAT_RECHECK_INTERVAL} "hdfs-site.xml"
loadConfigWithOption "dfs.namenode.backup.address" ${DFS_HOSTNAME} "${DFS_HOSTNAME}:${DFS_NAMENODE_BACKUP_PORT}" "${HOSTNAME}:${DFS_NAMENODE_BACKUP_PORT}" "hdfs-site.xml"
loadConfig "dfs.namenode.backup.http-address" "${DFS_HTTP_IP}:${DFS_NAMENODE_BACKUP_HTTP_PORT}" "hdfs-site.xml"
loadConfigWithOption "dfs.namenode.secondary.http-address" ${DFS_HOSTNAME} "${DFS_HOSTNAME}:${DFS_NAMENODE_SECONDARY_HTTP_PORT}" "${HOSTNAME}:${DFS_NAMENODE_SECONDARY_HTTP_PORT}" "hdfs-site.xml"
loadConfigWithOption "dfs.namenode.secondary.https-address" ${DFS_HOSTNAME} "${DFS_HOSTNAME}:${DFS_NAMENODE_SECONDARY_HTTPS_PORT}" "${HOSTNAME}:${DFS_NAMENODE_SECONDARY_HTTPS_PORT}" "hdfs-site.xml"
loadConfig "dfs.namenode.replication.considerLoad" ${DFS_NAMENODE_REPLICATION_CONSIDERLOAD} "hdfs-site.xml"
loadConfig "dfs.namenode.name.dir" "${DFS_NAMENODE_NAME_DIR_PREFIX}${HADOOP_TMP_DIR}${DFS_NAMENODE_NAME_DIR_POSTFIX}" "hdfs-site.xml"
loadConfig "dfs.namenode.name.dir.restore" ${DFS_NAMENODE_DIR_RESTORE} "hdfs-site.xml"
loadConfig "dfs.namenode.fs-limits.max-component-length" ${DFS_NAMENODE_FS_LIMITS_MAX_COMPONENT_LENGTH} "hdfs-site.xml"
loadConfig "dfs.namenode.fs-limits.max-directory-items" ${DFS_NAMENODE_FS_LIMITS_MAX_DIRECTORY_ITEMS} "hdfs-site.xml"
loadConfig "dfs.namenode.fs-limits.min-block-size" ${DFS_NAMENODE_FS_LIMITS_MIN_BLOCK_SIZE} "hdfs-site.xml"
loadConfig "dfs.namenode.fs-limits.max-blocks-per-file" ${DFS_NAMENODE_FS_LIMITS_MAX_BLOCKS_PER_FILE} "hdfs-site.xml"
loadConfig "dfs.namenode.edits.dir" ${DFS_NAMENODE_EDITS_DIR} "hdfs-site.xml"
loadConfig "dfs.namenode.acls.enabled" ${DFS_NAMENODE_ACLS_ENABLED} "hdfs-site.xml"
loadConfig "dfs.namenode.replication.min" ${DFS_NAMENODE_REPLICATION_MIN} "hdfs-site.xml"
loadConfig "dfs.namenode.handler.count" ${DFS_NAMENODE_HANDLER_COUNT} "hdfs-site.xml"
loadConfig "dfs.namenode.max.objects" ${DFS_NAMENODE_MAX_OBJECTS} "hdfs-site.xml"
loadConfig "dfs.namenode.datanode.decommission.interval" ${DFS_NAMENODE_DECOMMISSION_INTERVAL} "hdfs-site.xml"
loadConfig "dfs.namenode.decommission.blocks.per.interval" ${DFS_NAMENODE_DECOMMISSION_BLOCKS_PER_INTERVAL} "hdfs-site.xml"
loadConfig "dfs.namenode.replication.interval" ${DFS_NAMENODE_REPLICATION_INTERVAL} "hdfs-site.xml"
loadConfig "dfs.namenode.replication.interval" ${DFS_NAMENODE_ACCESSTIME_PRECISION} "hdfs-site.xml"
loadConfig "dfs.namenode.checkpoint.dir" "${DFS_NAMENODE_CHECKPOINT_DIR_PREFIX}${HADOOP_TMP_DIR}${DFS_NAMENODE_CHECKPOINT_DIR_POSTFIX}" "hdfs-site.xml"
loadConfig "dfs.namenode.checkpoint.edits.dir" ${DFS_NAMENODE_CHECKPOINT_EDITS_DIR} "hdfs-site.xml"
loadConfig "dfs.namenode.checkpoint.period" ${DFS_NAMENODE_CHECKPOINT_PERIOD} "hdfs-site.xml"
loadConfig "dfs.namenode.checkpoint.txns" ${DFS_NAMENODE_CHECKPOINT_TXNS} "hdfs-site.xml"
loadConfig "dfs.namenode.checkpoint.check.period" ${DFS_NAMENODE_CHECKPOINT_CHECK_PERIOD} "hdfs-site.xml"
loadConfig "dfs.namenode.checkpoint.max-retries" ${DFS_NAMENODE_CHECKPOINT_MAX_RETRIES} "hdfs-site.xml"
loadConfig "dfs.namenode.num.checkpoints.retained" ${DFS_NAMENODE_NUM_CHECKPOINTS_RETAINED} "hdfs-site.xml"
loadConfigWithOption "dfs.datanode.address" ${DFS_HOSTNAME} "${DFS_HOSTNAME}:${DFS_DATANODE_PORT}" "${HOSTNAME}:${DFS_DATANODE_PORT}" "hdfs-site.xml"
loadConfig "dfs.datanode.http.address" "${DFS_HTTP_IP}:${DFS_DATANODE_HTTP_PORT}" "hdfs-site.xml"
loadConfig "dfs.datanode.https.address" "${DFS_HTTPS_IP}:${DFS_DATANODE_HTTPS_PORT}" "hdfs-site.xml"
loadConfig "dfs.datanode.handler.count" ${DFS_DATANODE_HANDLER_COUNT} "hdfs-site.xml"
loadConfig "dfs.datanode.du.reserved" ${DFS_DATANODE_DU_RESERVED} "hdfs-site.xml"
loadConfig "dfs.datanode.data.dir" "${DFS_DATANODE_DATA_DIR_PREFIX}${HADOOP_TMP_DIR}${DFS_DATANODE_DATA_DIR_POSTFIX}" "hdfs-site.xml"
loadConfig "dfs.datanode.data.dir.perm" ${DFS_DATANODE_DATA_DIR_PERM} "hdfs-site.xml"
loadConfig "dfs.datanode.directoryscan.interval" ${DFS_DATANODE_DIRECTORYSCAN_INTERVAL} "hdfs-site.xml"
loadConfig "dfs.datanode.directoryscan.threads" ${DFS_DATANODE_DIRECTORYSCAN_THREADS} "hdfs-site.xml"
loadConfig "dfs.datanode.max.transfer.threads" ${DFS_DATANODE_MAX_TRANSFER_THREADS} "hdfs-site.xml"
loadConfig "dfs.datanode.scan.period.hours" ${DFS_DATANODE_SCAN_PERIOD_HOURS} "hdfs-site.xml"
loadConfig "dfs.datanode.readahead.bytes" ${DFS_DATANODE_READAHEAD_BYTES} "hdfs-site.xml"
loadConfig "dfs.datanode.drop.cache.behind.writes" ${DFS_DATANODE_DROP_CACHE_BEHIND_WRITES} "hdfs-site.xml"
loadConfig "dfs.datanode.sync.behind.writes" ${DFS_DATANODE_SYNC_BEHIND_WRITES} "hdfs-site.xml"
loadConfig "dfs.datanode.use.datanode.hostname" ${DFS_DATANODE_USE_DATANODE_HOSTNAME} "hdfs-site.xml"
loadConfig "dfs.datanode.hdfs-blocks-metadata.enabled" ${DFS_DATANODE_HDFS_BLOCKS_METADATA_ENABLED} "hdfs-site.xml"
loadConfig "dfs.http.policy" ${DFS_HTTP_POLICY} "hdfs-site.xml"
loadConfig "dfs.client.https.need-auth" ${DFS_CLIENT_HTTPS_NEED_AUTH} "hdfs-site.xml"
loadConfig "dfs.client.cached.conn.retry" ${DFS_CLIENT_CACHED_CONN_RETRY} "hdfs-site.xml"
loadConfig "dfs.blocksize" ${DFS_BLOCKSIZE} "hdfs-site.xml"
loadConfig "dfs.permissions.enabled" ${DFS_PERMISSIONS_ENABLED} "hdfs-site.xml"
loadConfig "dfs.permissions.superusergroup" ${DFS_PERMISSIONS_SUPERUSERGROUP} "hdfs-site.xml"
loadConfig "dfs.replication" ${DFS_REPLICATION} "hdfs-site.xml"
loadConfig "dfs.replication.max" ${DFS_REPLICATION_MAX} "hdfs-site.xml"
loadConfig "dfs.heartbeat.interval" ${DFS_HEARTBEAT_INTERVAL} "hdfs-site.xml"
loadConfig "dfs.client.block.write.retries" ${DFS_CLIENT_BLOCK_WRITE_RETRIES} "hdfs-site.xml"
loadConfig "dfs.client.block.write.replace-datanode-on-failure.enable" ${DFS_CLIENT_BLOCK_WRITE_REPLACE_DATANODE_ON_FAILURE_ENABLE} "hdfs-site.xml"
loadConfig "dfs.client.block.write.replace-datanode-on-failure.policy" ${DFS_CLIENT_BLOCK_WRITE_REPLACE_DATANODE_ON_FAILURE_POLICY} "hdfs-site.xml"
loadConfig "dfs.client.block.write.replace-datanode-on-failure.best-effort" ${DFS_CLIENT_BLOCK_WRITE_REPLACE_DATANODE_ON_FAILURE_BEST_EFFORT} "hdfs-site.xml"
loadConfig "dfs.blockreport.intervalMsec" ${DFS_BLOCKREPORT_INTERVAL_MS} "hdfs-site.xml"
loadConfig "dfs.blockreport.initialDelay" ${DFS_BLOCKREPORT_INITIAL_DELAY} "hdfs-site.xml"
loadConfig "dfs.blockreport.split.threshold" ${DFS_BLOCKREPORT_SPLIT_THRESHOLD} "hdfs-site.xml"
loadConfig "dfs.stream-buffer-size" ${DFS_STREAM_BUFFER_SIZE} "hdfs-site.xml"
loadConfig "dfs.bytes-per-checksum" ${DFS_BYTES_PER_CHECKSUM} "hdfs-site.xml"
loadConfig "dfs.client-write-packet-size" ${DFS_CLIENT_WRITE_PACKET_SIZE} "hdfs-site.xml"
loadConfig "dfs.image.compress" ${DFS_IMAGE_COMPRESS} "hdfs-site.xml"
echo "</configuration>" >> ${HADOOP_CONF_DIR}/hdfs-site.xml
# ------------------------------------------------------------------------------

# ----------------------------- Load yarn-site.xml configs ---------------------
echo "<configuration>" > ${HADOOP_CONF_DIR}/yarn-site.xml
loadConfigWithOption "yarn.resourcemanager.address" ${YARN_RM_HOSTNAME} "${YARN_RM_HOSTNAME}:${YARN_RM_PORT}" "${HOSTNAME}:${YARN_RM_PORT}" "yarn-site.xml"
loadConfig "yarn.resourcemanager.client.thread-count" ${YARN_RM_CLIENT_THREAD_COUNT} "yarn-site.xml"
loadConfigWithOption "yarn.resourcemanager.scheduler.address" ${YARN_RM_HOSTNAME} "${YARN_RM_HOSTNAME}:${YARN_RM_SCHEDULER_PORT}" "${HOSTNAME}:${YARN_RM_SCHEDULER_PORT}" "yarn-site.xml"
loadConfig "yarn.resourcemanager.client.thread-count" ${YARN_RM_SCHEDULER_CLIENT_THREAD_COUNT} "yarn-site.xml"
loadConfig "yarn.http.policy" ${YARN_HTTP_POLICY} "yarn-site.xml"
loadConfig "yarn.resourcemanager.webapp.address" "${YARN_RM_WEBAPP_IP}:${YARN_RM_WEBAPP_PORT}" "yarn-site.xml"
loadConfig "yarn.resourcemanager.webapp.https.address" "${YARN_RM_WEBAPP_IP}:${YARN_RM_WEBAPP_HTTPS_PORT}" "yarn-site.xml"
loadConfigWithOption "yarn.resourcemanager.resource-tracker.address" ${YARN_RM_HOSTNAME} "${YARN_RM_HOSTNAME}:${YARN_RM_TRACKER_PORT}" "${HOSTNAME}:${YARN_RM_TRACKER_PORT}" "yarn-site.xml"
loadConfig "yarn.acl.enable" ${YARN_ACL_ENABLE} "yarn-site.xml"
loadConfig "yarn.admin.acl" ${YARN_ADMIN_ACL} "yarn-site.xml"
loadConfig "yarn.resourcemanager.admin.address" "${YARN_RM_WEBAPP_IP}:${YARN_RM_ADMIN_PORT}" "yarn-site.xml"
loadConfig "yarn.resourcemanager.admin.client.thread-count" ${YARN_RM_ADMIN_CLIENT_THREAD_COUNT} "yarn-site.xml"
loadConfig "yarn.resourcemanager.connect.max-wait.ms" ${YARN_RM_CONNECT_MAX_WAIT_MS} "yarn-site.xml"
loadConfig "yarn.resourcemanager.connect.retry-interval.ms" ${YARN_RM_CONNECT_RETRY_INTERVAL_MS} "yarn-site.xml"
loadConfig "yarn.scheduler.minimum-allocation-mb" ${YARN_RM_SCHEDULER_MIN_ALLOC_MB} "yarn-site.xml"
loadConfig "yarn.scheduler.maximum-allocation-mb" ${YARN_RM_SCHEDULER_MAX_ALLOC_MB} "yarn-site.xml"
loadConfig "yarn.scheduler.minimum-allocation-vcores" ${YARN_RM_SCHEDULER_MIN_ALLOC_VCORES} "yarn-site.xml"
loadConfig "yarn.scheduler.maximum-allocation-vcores" ${YARN_RM_SCHEDULER_MAX_ALLOC_VCORES} "yarn-site.xml"
loadConfig "yarn.resourcemanager.recovery.enabled" ${YARN_RM_RECOVERY_ENABLED} "yarn-site.xml"

if [[ ${YARN_RM_STORE_CLASS} == "FileSystem" ]]
    then
        loadConfig "yarn.resourcemanager.store.class" ${YARN_RM_STATE_STORE_FILESYSTEM} "yarn-site.xml"
elif [[ ${YARN_RM_STORE_CLASS} == "ZooKeeper" ]]
    then
        loadConfig "yarn.resourcemanager.store.class" ${YARN_RM_STATE_STORE_ZOOKEEPER} "yarn-site.xml"
fi

loadConfig "yarn.resourcemanager.max-completed-applications" ${YARN_RM_MAX_COMPLETED_APPS} "yarn-site.xml"
loadConfig "yarn.resourcemanager.state-store.max-completed-applications" ${YARN_RM_STATE_STORE_MAX_COMPLETED_APPS} "yarn-site.xml"
loadConfig "yarn.resourcemanager.zk-address" ${YARN_RM_ZK_ADDR} "yarn-site.xml"
loadConfig "yarn.resourcemanager.zk-num-retries" ${YARN_RM_ZK_NUM_RETRIES} "yarn-site.xml"
loadConfig "yarn.resourcemanager.zk-retry-interval-ms" ${YARN_RM_ZK_RETRY_INTERVAL_MS} "yarn-site.xml"
loadConfig "yarn.resourcemanager.zk-state-store.parent-path" ${YARN_RM_ZK_STATE_STORE_PARENT_PATH} "yarn-site.xml"
loadConfig "yarn.resourcemanager.zk-timeout-ms" ${YARN_RM_ZK_TIMEOUT_MS} "yarn-site.xml"
loadConfig "yarn.resourcemanager.zk-acl" ${YARN_RM_ZK_ACL} "yarn-site.xml"
loadConfig "yarn.resourcemanager.zk-state-store.root-node.acl" ${YARN_RM_ZK_STATE_STORE_ROOT_NODE_ACL} "yarn-site.xml"
loadConfig "yarn.resourcemanager.fs.state-store.uri" "${HADOOP_TMP_DIR}${YARN_RM_FS_STATE_STORE_URI_POSTFIX}" "yarn-site.xml"
loadConfig "yarn.resourcemanager.fs.state-store.retry-policy-spec" ${YARN_RM_FS_STATE_STORE_RETRY_POLICY_SPEC} "yarn-site.xml"
loadConfig "yarn.resourcemanager.ha.enabled" ${YARN_RM_HA_ENABLED} "yarn-site.xml"
loadConfig "yarn.resourcemanager.ha.automatic-failover.enabled" ${YARN_RM_HA_AUTOMATIC_FAILOVER_ENABLED} "yarn-site.xml"
loadConfig "yarn.resourcemanager.ha.automatic-failover.embedded" ${YARN_RM_HA_AUTOMATIC_FAILOVER_EMBEDDED} "yarn-site.xml"
loadConfig "yarn.resourcemanager.ha.automatic-failover.zk-base-path" ${YARN_RM_HA_AUTOMATIC_FAILOVER_ZK_BASE_PATH} "yarn-site.xml"
loadConfig "yarn.resourcemanager.cluster-id" ${YARN_RM_CLUSTER_ID} "yarn-site.xml"
loadConfig "yarn.resourcemanager.ha.rm-ids" ${YARN_RM_HA_RM_IDS} "yarn-site.xml"
loadConfig "yarn.resourcemanager.ha.id" ${YARN_RM_HA_ID} "yarn-site.xml"
loadConfig "yarn.client.failover-proxy-provider" ${YARN_CLIENT_FAILOVER_PROXY_PROVIDER} "yarn-site.xml"
loadConfig "yarn.client.failover-max-attempts" ${YARN_CLIENT_FAILOVER_MAX_ATTEMPTS} "yarn-site.xml"
loadConfig "yarn.client.failover-sleep-base-ms" ${YARN_CLIENT_FAILOVER_SLEEP_BASE_MS} "yarn-site.xml"
loadConfig "yarn.client.failover-sleep-max-ms" ${YARN_CLIENT_FAILOVER_SLEEP_MAX_MS} "yarn-site.xml"
loadConfig "yarn.client.failover-retries" ${YARN_CLIENT_FAILOVER_RETRIES} "yarn-site.xml"
loadConfig "yarn.client.failover-retries-on-socket-timeouts" ${YARN_CLIENT_FAILOVER_RETRIES_ON_SOCKET_TIMEOUTS} "yarn-site.xml"
loadConfig "yarn.resourcemanager.nodemanagers.heartbeat-interval-ms" ${YARN_RM_NODEMANAGERS_HEARTBEAT_INTERVAL_MS} "yarn-site.xml"
loadConfig "yarn.resourcemanager.scheduler.monitor.enable" ${YARN_RM_SCHEDULER_MONITOR_ENABLE} "yarn-site.xml"
loadConfig "yarn.resourcemanager.scheduler.monitor.policies" ${YARN_RM_SCHEDULER_MONITOR_POLICIES} "yarn-site.xml"
loadConfigWithOption "yarn.nodemanager.address" ${YARN_NM_HOSTNAME} "${YARN_NM_HOSTNAME}:${YARN_NM_PORT}" "${HOSTNAME}:${YARN_NM_PORT}" "yarn-site.xml"
loadConfig "yarn.nodemanager.delete.thread-count" ${YARN_NM_DELETE_THREAD_COUNT} "yarn-site.xml"
loadConfig "yarn.nodemanager.delete.debug-delay-sec" ${YARN_NM_DELETE_DEBUG_DELAY_SEC} "yarn-site.xml"
loadConfig "yarn.nodemanager.local-dirs" "${HADOOP_TMP_DIR}${YARN_NM_LOCAL_DIRS_POSTFIX}" "yarn-site.xml"
loadConfig "yarn.nodemanager.local-cache.max-files-per-directory" ${YARN_NM_LOCAL_CACHE_MAX_FILES_PER_DIR} "yarn-site.xml"
loadConfigWithOption "yarn.nodemanager.localizer.address" ${YARN_NM_HOSTNAME} "${YARN_NM_HOSTNAME}:${YARN_NM_LOCALIZER_PORT}" "${HOSTNAME}:${YARN_NM_LOCALIZER_PORT}" "yarn-site.xml"
loadConfig "yarn.nodemanager.localizer.cache.cleanup.interval-ms" ${YARN_NM_LOCALIZER_CACHE_CLEANUP_INTERVAL_MS} "yarn-site.xml"
loadConfig "yarn.nodemanager.localizer.cache.target-size-mb" ${YARN_NM_LOCALIZER_CACHE_TARGET_SIZE_MB} "yarn-site.xml"
loadConfig "yarn.nodemanager.localizer.client.thread-count" ${YARN_NM_LOCALIZER_CLIENT_THREAD_COUNT} "yarn-site.xml"
loadConfig "yarn.nodemanager.localizer.fetch.thread-count" ${YARN_NM_LOCALIZER_FETCH_THREAD_COUNT} "yarn-site.xml"
loadConfig "yarn.log-aggregation-enable" ${YARN_LOG_AGGREGATION_ENABLED} "yarn-site.xml"
loadConfig "yarn.log-aggregation.retain-seconds" ${YARN_LOG_AGGREGATION_RETAIN_SECONDS} "yarn-site.xml"
loadConfig "yarn.log-aggregation.retain-check-interval-seconds" ${YARN_LOG_AGGREGATION_RETAIN_CHECK_INTERVAL_SECONDS} "yarn-site.xml"
loadConfig "yarn.nodemanager.log.retain-seconds" ${YARN_NM_LOG_RETAIN_SECONDS} "yarn-site.xml"
loadConfig "yarn.nodemanager.webapp.address" ${YARN_NM_WEBAPP_ADDR} "yarn-site.xml"
loadConfig "yarn.nodemanager.log-aggregation.compression-type" ${YARN_NM_LOG_AGGREGATION_COMPRESSION_TYPE} "yarn-site.xml"
loadConfig "yarn.nodemanager.aux-services"  ${YARN_NM_AUX_SERVICES} "yarn-site.xml"
loadConfig "yarn.timeline-service.enabled" ${YARN_TIMELINE_SERVICE_ENABLED} "yarn-site.xml"
loadConfigWithOption "yarn.timeline-service.address" ${YARN_NM_HOSTNAME} "${YARN_NM_HOSTNAME}:${YARN_TIMELINE_SERVICE_PORT}" "${HOSTNAME}:${YARN_TIMELINE_SERVICE_PORT}"  "yarn-site.xml"
loadConfigWithOption "yarn.timeline-service.webapp.address" ${YARN_NM_HOSTNAME} "${YARN_NM_HOSTNAME}:${YARN_TIMELINE_SERVICE_WEBAPP_PORT}" "${HOSTNAME}:${YARN_TIMELINE_SERVICE_WEBAPP_PORT}" "yarn-site.xml"
loadConfigWithOption "yarn.timeline-service.webapp.https.address" ${YARN_NM_HOSTNAME} "${YARN_NM_HOSTNAME}:${YARN_TIMELINE_SERVICE_WEBAPP_HTTPS_PORT}" "${HOSTNAME}:${YARN_TIMELINE_SERVICE_WEBAPP_HTTPS_PORT}" "yarn-site.xml"
loadConfig "yarn.timeline-service.store-class" ${YARN_TIMELINE_SERVICE_STORE_CLASS} "yarn-site.xml"
loadConfig "yarn.timeline-service.ttl-enable" ${YARN_TIMELINE_SERVICE_TTL_ENABLED} "yarn-site.xml"
loadConfig "yarn.timeline-service.ttl-ms" ${YARN_TIMELINE_SERVICE_TTL_MS} "yarn-site.xml"
loadConfig "yarn.timeline-service.leveldb-timeline-store.path" "${HADOOP_TMP_DIR}${YARN_TIMELINE_SERVICE_LEVELDB_TIMELINE_STORE_PATH_POSTFIX}" "yarn-site.xml"
loadConfig "yarn.timeline-service.leveldb-timeline-store.ttl-interval-ms" ${YARN_TIMELINE_SERVICE_LEVELDB_TIMELINE_STORE_TTL_INTERVAL_MS} "yarn-site.xml"
loadConfig "yarn.timeline-service.leveldb-timeline-store.read-cache-size" ${YARN_TIMELINE_SERVICE_LEVELDB_TIMELINE_STORE_READ_CACHE_SIZE} "yarn-site.xml"
loadConfig "yarn.timeline-service.leveldb-timeline-store.start-time-read-cache-size" ${YARN_TIMELINE_SERVICE_LEVELDB_TIMELINE_STORE_START_TIME_READ_CACHE_SIZE} "yarn-site.xml"
loadConfig "yarn.timeline-service.leveldb-timeline-store.start-time-write-cache-size" ${YARN_TIMELINE_SERVICE_LEVELDB_TIMELINE_STORE_START_TIME_WRITE_CACHE_SIZE} "yarn-site.xml"
loadConfig "yarn.timeline-service.handler-thread-count" ${YARN_TIMELINE_SERVICE_HANDLER_THREAD_COUNT} "yarn-site.xml"
echo "</configuration>" >> ${HADOOP_CONF_DIR}/yarn-site.xml
# ------------------------------------------------------------------------------

# ---------------------------- Load mapred-site.xml configs --------------------
echo "<configuration>" > ${HADOOP_CONF_DIR}/mapred-site.xml
loadConfig "mapreduce.framework.name" ${MAPREDUCE_FRAMEWORK_NAME} "mapred-site.xml"
loadConfig "mapreduce.map.memory.mb" ${MAPREDUCE_MAP_MEMORY_MB} "mapred-site.xml"
loadConfig "mapreduce.reduce.memory.mb" ${MAPREDUCE_REDUCE_MEMORY_MB} "mapred-site.xml"
loadConfig "mapreduce.task.io.sort.factor" ${MAPREDUCE_TASK_IO_SORT_FACTOR} "mapred-site.xml"
loadConfig "mapreduce.task.io.sort.mb" ${MAPREDUCE_TASK_IO_SORT_MB} "mapred-site.xml"
loadConfig "mapreduce.reduce.shuffle.parallelcopies" ${MAPREDUCE_REDUCE_SHUFFLE_PARALLELCOPIES} "mapred-site.xml"
loadConfigWithOption "mapreduce.jobhistory.address" ${MAPREDUCE_HOSTNAME} "${MAPREDUCE_HOSTNAME}:${MAPREDUCE_JOBHISTORY_PORT}" "${HOSTNAME}:${MAPREDUCE_JOBHISTORY_PORT}" "mapred-site.xml"
loadConfig "mapreduce.jobhistory.webapp.address" "${MAPREDUCE_JOBHISTORY_WEBAPP_IP}:${MAPREDUCE_JOBHISTORY_WEBAPP_PORT}" "mapred-site.xml"
loadConfig "mapreduce.map.cpu.vcores" ${MAPREDUCE_MAP_CPU_VCORES} "mapred-site.xml"
loadConfig "mapreduce.reduce.cpu.vcores" ${MAPREDUCE_REDUCE_CPU_VCORES} "mapred-site.xml"
loadConfig "mapreduce.job.maps" ${MAPREDUCE_JOB_MAPS} "mapred-site.xml"
loadConfig "mapreduce.job.reduces" ${MAPREDUCE_JOB_REDUCES} "mapred-site.xml"
loadConfig "mapreduce.job.running.map.limit" ${MAPREDUCE_JOB_RUNNING_MAP_LIMIT} "mapred-site.xml"
loadConfig "mapreduce.job.running.reduce.limit" ${MAPREDUCE_JOB_RUNNING_REDUCE_LIMIT} "mapred-site.xml"
loadConfig "mapreduce.jobtracker.jobhistory.block.size" ${MAPREDUCE_JOBTRACKER_JOBHISTORY_BLOCK_SIZE} "mapred-site.xml"
loadConfig "mapreduce.tasktracker.map.tasks.maximum" ${MAPREDUCE_TASKTRACKER_MAP_TASKS_MAXIMUM} "mapred-site.xml"
loadConfig "mapreduce.tasktracker.reduce.tasks.maximum" ${MAPREDUCE_TASKTRACKER_REDUCE_TASKS_MAXIMUM} "mapred-site.xml"
loadConfig "mapreduce.jobtracker.handler.count" ${MAPREDUCE_JOBTRACKER_HANDLER_COUNT} "mapred-site.xml"
loadConfig "mapreduce.job.userlog.retain.hours" ${MAPREDUCE_JOB_USERLOG_RETAIN_HOURS} "mapred-site.xml"
loadConfig "mapreduce.jobtracker.address" ${MAPREDUCE_JOBTRACKER_ADDR} "mapred-site.xml"
loadConfigWithOption "mapreduce.jobtracker.http.address" ${MAPREDUCE_HOSTNAME} "${MAPREDUCE_HOSTNAME}:${MAPREDUCE_JOBTRACKER_HTTP_PORT}" "${HOSTNAME}:${MAPREDUCE_JOBTRACKER_HTTP_PORT}" "mapred-site.xml"
loadConfigWithOption "mapreduce.tasktracker.http.address" ${MAPREDUCE_HOSTNAME} "${MAPREDUCE_HOSTNAME}:${MAPREDUCE_TASKTRACKER_HTTP_PORT}" "${HOSTNAME}:${MAPREDUCE_TASKTRACKER_HTTP_PORT}" "mapred-site.xml"
echo "</configuration>" >> ${HADOOP_CONF_DIR}/mapred-site.xml
# ------------------------------------------------------------------------------

echo "export JAVA_HOME=${JAVA_HOME}" >> ${HADOOP_CONF_DIR}/hadoop-env.sh